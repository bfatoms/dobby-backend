# This is a sample build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: php:8.2

pipelines:
  branches:
    '{release/*, develop}':
      - step:
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip
            - apt-get install zlib1g-dev libpng-dev libzip-dev -y
            - docker-php-ext-install gd
            - docker-php-ext-install zip
            - docker-php-ext-install pdo_mysql
            - docker-php-ext-enable gd
            - docker-php-ext-enable zip
            - docker-php-ext-enable pdo_mysql
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install
            - cp .env.testing .env
            - php artisan key:generate
            - php artisan jwt:secret
            - touch test_db.sqlite
            - composer test-runner
          services:
            - mysql
      - step:
          name: Deploy to Develop
          deployment: test
          script:
            - echo "All tests passed! Deploying to develop environment"
            - curl https://forge.laravel.com/servers/
            - echo "DONE"
    release:
      - step:
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip
            - apt-get install zlib1g-dev libpng-dev libzip-dev -y
            - docker-php-ext-install gd
            - docker-php-ext-install zip
            - docker-php-ext-install pdo_mysql
            - docker-php-ext-enable gd
            - docker-php-ext-enable zip
            - docker-php-ext-enable pdo_mysql
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install
            - cp .env.testing .env
            - php artisan key:generate
            - php artisan jwt:secret
            - touch test_db.sqlite
            - composer test-runner
          services:
            - mysql
      - step:
          name: Deploy to staging
          deployment: staging
          script:
            - echo "All tests passed! Deploying to staging environment"
            # - curl https://forge.laravel.com/servers/
            - echo "DONE"
    master:
      - step:
          caches:
            - composer
          script:
            - apt-get update && apt-get install -y unzip
            - apt-get install zlib1g-dev libpng-dev libzip-dev -y
            - docker-php-ext-install gd
            - docker-php-ext-install zip
            - docker-php-ext-install pdo_mysql
            - docker-php-ext-enable gd
            - docker-php-ext-enable zip
            - docker-php-ext-enable pdo_mysql
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install
            - cp .env.testing .env
            - php artisan key:generate
            - php artisan jwt:secret
            - touch test_db.sqlite
            - composer test-runner
          services:
            - mysql
      - step:
          name: Deploy to Production
          deployment: production
          script:
            - echo "All tests passed! Deploying to production environment"
            # - curl https://forge.laravel.com/servers/
            - echo "DONE"



definitions:
  services:
    mysql:
      image: mysql:5.7
      variables:
        MYSQL_DATABASE: 'dobby_test'
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_USER: 'homestead'
        MYSQL_PASSWORD: 'secret'