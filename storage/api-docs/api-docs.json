{
    "openapi": "3.0.0",
    "info": {
        "title": "Dobby OpenApi",
        "description": "This is a public api provided for Application Developers, the system includes,\n *      Users and Permissions\n *      Customer and Suppliers\n *      Products and Inventories\n *      Sales and Purchases\n *      Accouting",
        "contact": {
            "email": "hello@manilastyles.com"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/auth/verify/{token}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "description": "Verify Email",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "verification token you get after sign-up",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email Verified"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "tomas@test.com"
                                    },
                                    "password": {
                                        "description": "User Password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Upon Successful Login you can add the Bearer access_token on the Authorization Above click the green icon"
                    },
                    "400": {
                        "description": "When email or password are wrong or in a bad format"
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "description": "Get the current logged in user of the System",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "returns your data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Issues a new token",
                "requestBody": {
                    "content": {
                        "application/json": {}
                    }
                },
                "responses": {
                    "200": {
                        "description": "This is like a login"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "description": "Forgot password",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "operating_system": {
                                        "description": "First Name",
                                        "type": "string",
                                        "example": "Mac OS"
                                    },
                                    "browser": {
                                        "description": "Chrome or Your Company App",
                                        "type": "string",
                                        "example": "Demo Inc. App"
                                    },
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jarret_oneal4@mailgun.io"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forgot Password"
                    }
                }
            }
        },
        "/api/auth/reset-password/{token}/check": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "description": "Check if this reset password token is allowed",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "password reset token on your email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token Exists"
                    },
                    "422": {
                        "description": "Token Expired or Invalid"
                    }
                }
            }
        },
        "/api/auth/reset-password/{token}": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "description": "Reset password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "password reset token on your email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "password": {
                                        "description": "User Password",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Password Confirmation",
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "operating_system": {
                                        "description": "First Name",
                                        "type": "string",
                                        "example": "Mac OS"
                                    },
                                    "browser": {
                                        "description": "Chrome or Your Company App",
                                        "type": "string",
                                        "example": "Demo Inc. App"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Forgot Password"
                    }
                }
            }
        },
        "/api/banks/{account}/transactions": {
            "get": {
                "tags": [
                    "Bank Accounts"
                ],
                "description": "Show an account",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bank Accounts"
                ],
                "description": "Show an account",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "id": {
                                            "description": "ID of the transaction",
                                            "type": "string",
                                            "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                        },
                                        "type": {
                                            "description": "Type of the transaction",
                                            "type": "string",
                                            "example": "transfer-money"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bank Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/banks/{account}/transaction-trends?from={from}&to={to}": {
            "get": {
                "tags": [
                    "Bank Accounts"
                ],
                "description": "Show account trends",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-01-01"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-01-01"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/banks/transaction-trends?from={from}&to={to}": {
            "get": {
                "tags": [
                    "Bank Accounts"
                ],
                "description": "Show account trends",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-01-01"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Bank Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2020-01-01"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chart-of-accounts": {
            "get": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "Chart of Account List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "with will also include relationships",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "taxRate",
                                    "saleContacts",
                                    "purchaseContacts",
                                    "purchaseProducts",
                                    "saleProducts",
                                    "costOfGoodsSoldAccounts",
                                    "inventoryProducts",
                                    "currency"
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "Create a Chart of Account",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Account Code",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "6003001"
                                    },
                                    "name": {
                                        "description": "Chart of Account Name",
                                        "type": "string",
                                        "example": "Vat 12"
                                    },
                                    "tax_rate_id": {
                                        "description": "Chart of Account Tax Rate, see Tax Rates Index for list of available ids",
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chart-of-accounts/{account}": {
            "get": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "Show an account",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Chart of Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "Update an account",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Chart of Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Chart of Account name",
                                        "type": "string",
                                        "example": "Vat 30"
                                    },
                                    "tax_rate_id": {
                                        "description": "Chart of Account",
                                        "type": "string",
                                        "example": "30"
                                    },
                                    "type": {
                                        "description": "The type of the Account, see chart-of-account-types for list of available name of types",
                                        "type": "string",
                                        "example": "liabilities"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "trash a Chart of Account",
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "description": "Chart of Account ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chart-of-account-types": {
            "get": {
                "tags": [
                    "Chart of Account Types"
                ],
                "description": "Chart of Account Type Index",
                "responses": {
                    "200": {
                        "description": "Chart of Account Types Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/tax-types": {
            "get": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "Shows a list of contact tax types",
                "responses": {
                    "200": {
                        "description": "Contact Tax Type Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/due-date-types": {
            "get": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "Show a list of contact due date types",
                "responses": {
                    "200": {
                        "description": "Contact Due Date Type Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts": {
            "get": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "Contact List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "primaryPerson",
                                    "contactPersons",
                                    "saleAccount",
                                    "saleTaxRate",
                                    "purchaseAccount",
                                    "purchaseTaxRate",
                                    "sales",
                                    "purchases",
                                    "quotes",
                                    "bills",
                                    "billCreditNotes",
                                    "invoices",
                                    "invoiceCreditNotes",
                                    "spendMoney",
                                    "receiveMoney",
                                    "orders"
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "Create a Contact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Contact Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "mobile_number": {
                                        "description": "Contact Mobile Number",
                                        "type": "string",
                                        "example": "981237412"
                                    },
                                    "website": {
                                        "description": "Contact Website",
                                        "type": "string",
                                        "example": "https://manilastyles.com"
                                    },
                                    "address": {
                                        "description": "Contact Address",
                                        "type": "string",
                                        "example": "1234 Rufino st cor. Valero"
                                    },
                                    "city": {
                                        "description": "Contact City",
                                        "type": "string",
                                        "example": "Makati"
                                    },
                                    "zip": {
                                        "description": "Contact Zip",
                                        "type": "string",
                                        "example": "1043"
                                    },
                                    "sale_tax_type": {
                                        "description": "Contact Sales Tax Type see Tax Types for list of available Tax Types",
                                        "type": "string",
                                        "example": "tax exlusive"
                                    },
                                    "sale_account_id": {
                                        "description": "Contact Sales Account ID see Chart Of Accounts for available accounts",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_tax_type": {
                                        "description": "Contact Purchase Tax Type see Tax Types for list of available Tax Types",
                                        "type": "string",
                                        "example": "tax inclusive"
                                    },
                                    "purchase_account_id": {
                                        "description": "Contact Purchase Account ID see Chart Of Accounts for available accounts",
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "tax_identification_number": {
                                        "description": "Contact Tax Identification Number ex. (EIN, TIN)",
                                        "type": "string",
                                        "example": "303-303-303-000"
                                    },
                                    "sale_tax_rate_id": {
                                        "description": "Contact Sales Tax Rate ID see Tax Rate Index for list of available tax rates",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_tax_rate_id": {
                                        "description": "Contact Purchases Tax Rate ID see Tax Rate Index for list of available tax rates",
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "business_registration_number": {
                                        "description": "Contact Business Registration Number",
                                        "type": "string",
                                        "example": "B2012-12398740"
                                    },
                                    "credit_limit": {
                                        "description": "Contact Credit Limit",
                                        "type": "string",
                                        "example": "1000000"
                                    },
                                    "sale_discount": {
                                        "description": "Contact Sales Discount",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "bill_due": {
                                        "description": "Contact Bill Due is a whole number say ex. 5",
                                        "type": "string",
                                        "example": "8"
                                    },
                                    "bill_due_type": {
                                        "description": "Contact Bill Due Type is a string",
                                        "type": "string",
                                        "example": "of the following month"
                                    },
                                    "invoice_due": {
                                        "description": "Contact Invoice Due is a whole number say ex. 5",
                                        "type": "string",
                                        "example": "8"
                                    },
                                    "invoice_due_type": {
                                        "description": "Contact Invoice Due Type is a string",
                                        "type": "string",
                                        "example": "of the following month"
                                    },
                                    "contact_persons": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "first_name": {
                                                    "description": "Contact Person First name",
                                                    "type": "string",
                                                    "example": "Shockeil"
                                                },
                                                "last_name": {
                                                    "description": "Contact Person Last name",
                                                    "type": "string",
                                                    "example": "O'Nail"
                                                },
                                                "email_name": {
                                                    "description": "Contact Person Email",
                                                    "type": "string",
                                                    "example": "hello@manilastyles.com"
                                                },
                                                "is_primary": {
                                                    "description": "Contact Person is the primary contact person",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "include_in_emails": {
                                                    "description": "Contact Person is included on emails",
                                                    "type": "boolean",
                                                    "example": "false"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/contacts/{contact}": {
            "get": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "Show a contact",
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "Update a contact",
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Contact Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "mobile_number": {
                                        "description": "Contact Mobile Number",
                                        "type": "string",
                                        "example": "981237412"
                                    },
                                    "website": {
                                        "description": "Contact Website",
                                        "type": "string",
                                        "example": "https://manilastyles.com"
                                    },
                                    "address": {
                                        "description": "Contact Address",
                                        "type": "string",
                                        "example": "1234 Rufino st cor. Valero"
                                    },
                                    "city": {
                                        "description": "Contact City",
                                        "type": "string",
                                        "example": "Makati"
                                    },
                                    "zip": {
                                        "description": "Contact Zip",
                                        "type": "string",
                                        "example": "1043"
                                    },
                                    "sale_tax_type": {
                                        "description": "Contact Sales Tax Type see Tax Types for list of available Tax Types",
                                        "type": "string",
                                        "example": "tax exlusive"
                                    },
                                    "sale_account_id": {
                                        "description": "Contact Sales Account ID see Chart Of Accounts for available accounts",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_tax_type": {
                                        "description": "Contact Purchase Tax Type see Tax Types for list of available Tax Types",
                                        "type": "string",
                                        "example": "tax inclusive"
                                    },
                                    "purchase_account_id": {
                                        "description": "Contact Purchase Account ID see Chart Of Accounts for available accounts",
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "tax_identification_number": {
                                        "description": "Contact Tax Identification Number ex. (EIN, TIN)",
                                        "type": "string",
                                        "example": "303-303-303-000"
                                    },
                                    "sale_tax_rate_id": {
                                        "description": "Contact Sales Tax Rate ID see Tax Rate Index for list of available tax rates",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_tax_rate_id": {
                                        "description": "Contact Purchases Tax Rate ID see Tax Rate Index for list of available tax rates",
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "business_registration_number": {
                                        "description": "Contact Business Registration Number",
                                        "type": "string",
                                        "example": "B2012-12398740"
                                    },
                                    "credit_limit": {
                                        "description": "Contact Credit Limit",
                                        "type": "string",
                                        "example": "1000000"
                                    },
                                    "sale_discount": {
                                        "description": "Contact Sales Discount",
                                        "type": "string",
                                        "example": "10"
                                    },
                                    "bill_due": {
                                        "description": "Contact Bill Due is a whole number say ex. 5",
                                        "type": "string",
                                        "example": "8"
                                    },
                                    "bill_due_type": {
                                        "description": "Contact Bill Due Type is a string",
                                        "type": "string",
                                        "example": "of the following month"
                                    },
                                    "invoice_due": {
                                        "description": "Contact Invoice Due is a whole number say ex. 5",
                                        "type": "string",
                                        "example": "8"
                                    },
                                    "invoice_due_type": {
                                        "description": "Contact Invoice Due Type is a string",
                                        "type": "string",
                                        "example": "of the following month"
                                    },
                                    "contact_persons": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "first_name": {
                                                    "description": "Contact Person First name",
                                                    "type": "string",
                                                    "example": "Shockeil"
                                                },
                                                "last_name": {
                                                    "description": "Contact Person Last name",
                                                    "type": "string",
                                                    "example": "O'Nail"
                                                },
                                                "email_name": {
                                                    "description": "Contact Person Email",
                                                    "type": "string",
                                                    "example": "hello@manilastyles.com"
                                                },
                                                "is_primary": {
                                                    "description": "Contact Person is the primary contact person",
                                                    "type": "boolean",
                                                    "example": "true"
                                                },
                                                "include_in_emails": {
                                                    "description": "Contact Person is included on emails",
                                                    "type": "boolean",
                                                    "example": "false"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Customers and Suppliers"
                ],
                "description": "trash a Contact",
                "parameters": [
                    {
                        "name": "contact",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system-currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "description": "Show a list of currencies supported by the system",
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "description": "Currency List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "with will also include relationships",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "chartOfAccounts",
                                    "orders"
                                ]
                            },
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Currencies"
                ],
                "description": "Create a Currency",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "3 character code",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "PHP"
                                    },
                                    "name": {
                                        "description": "Currency Name",
                                        "type": "string",
                                        "example": "Philippine Peso"
                                    },
                                    "symbol": {
                                        "description": "Currency Name",
                                        "type": "string",
                                        "example": "₱"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/currencies/{currency}": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "description": "Show a user",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Currencies"
                ],
                "description": "Update a user",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "3 character code",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "PHP"
                                    },
                                    "name": {
                                        "description": "Currency Name",
                                        "type": "string",
                                        "example": "Philippine Peso"
                                    },
                                    "symbol": {
                                        "description": "Currency Name",
                                        "type": "string",
                                        "example": "₱"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "description": "trash a Currency",
                "parameters": [
                    {
                        "name": "currency",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/expenses/track": {
            "post": {
                "tags": [
                    "Expenses"
                ],
                "description": "Track Estimated Expense",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "estimated_expense_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "tracked_expense_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/expenses": {
            "get": {
                "tags": [
                    "Expenses"
                ],
                "description": "List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "project"
                                ]
                            },
                            "default": "project"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Expenses"
                ],
                "description": "Create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "quantity": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "unit_price": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "charge_type": {
                                        "description": "MARK_UP, PASS_COST_ALONG, CUSTOM_PRICE, NON_CHARGEABLE",
                                        "type": "string",
                                        "example": "MARK_UP"
                                    },
                                    "mark_up": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "custom_price": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "is_invoiced": {
                                        "description": "",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/expenses/{expense}": {
            "put": {
                "tags": [
                    "Expenses"
                ],
                "description": "Update",
                "parameters": [
                    {
                        "name": "expense",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "quantity": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "unit_price": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "charge_type": {
                                        "description": "MARK_UP, PASS_COST_ALONG, CUSTOM_PRICE, NON_CHARGEABLE",
                                        "type": "string",
                                        "example": "MARK_UP"
                                    },
                                    "mark_up": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "custom_price": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "is_invoiced": {
                                        "description": "",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Expenses"
                ],
                "description": "trash",
                "parameters": [
                    {
                        "name": "expense",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chart-of-accounts/import": {
            "post": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "Import Data for Chart of Accounts",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "only accepts csv file",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chart-of-accounts/export": {
            "get": {
                "tags": [
                    "Chart of Accounts"
                ],
                "description": "Import Data for Chart of Accounts",
                "responses": {
                    "200": {
                        "description": "Chart of Account Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/initial-data": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "description": "Contact List",
                "parameters": [
                    {
                        "name": "order_type",
                        "in": "query",
                        "description": "Order Type of the order you are creating",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "SO",
                                    "PO",
                                    "QU",
                                    "BILL",
                                    "INV",
                                    "RMD",
                                    "RMO",
                                    "RMP",
                                    "SMD",
                                    "SMP",
                                    "SMO"
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "contact_id",
                        "in": "query",
                        "description": "See Contacts for list of contacts",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "90c1a47a-6ba8-43d8-beda-54bdd21bef71"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sortKey must be, field_name or relationship.field_name, ex. sortKey=name or sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sortOrder must be, asc or desc sortOrder=asc",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "description": "Order List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "order_type",
                        "in": "query",
                        "description": "Returns all Orders regarless of type",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "SO",
                                    "PO",
                                    "QU",
                                    "BILL",
                                    "INV",
                                    "RMD",
                                    "RMO",
                                    "RMP",
                                    "SMD",
                                    "SMP",
                                    "SMO"
                                ]
                            },
                            "default": ""
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Returns all Orders that has this status",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "boolean",
                                "enum": [
                                    "DRAFT",
                                    "FOR_APPROVAL",
                                    "APPROVED",
                                    "PAID",
                                    "VOID",
                                    "DELETED",
                                    "INVOICED",
                                    "BILLED",
                                    "ACCEPTED",
                                    "SENT",
                                    "DECLINED",
                                    "SALES"
                                ]
                            },
                            "default": false
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "with will also include relationships",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "currency",
                                    "contact",
                                    "payments",
                                    "refunds",
                                    "creditNotePayments"
                                ]
                            },
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "description": "Create an Order",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_type": {
                                        "description": "Order types are SO, PO, QU, BILL, INV, RM, SM}",
                                        "type": "string",
                                        "example": "BILL"
                                    },
                                    "contact_id": {
                                        "description": "see contacts for IDS",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "contact_name": {
                                        "description": "Contact Name is required if contact_id is not provided",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "order_date": {
                                        "description": "Order Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "end_date": {
                                        "description": "end date is not required when is credit note is true",
                                        "type": "string",
                                        "example": "2020-06-09 07:16:26"
                                    },
                                    "reference": {
                                        "description": "Reference is a longText",
                                        "type": "string",
                                        "example": "Suscipit eaque rerum rerum. Perferendis vitae unde et et excepturi."
                                    },
                                    "tax_setting": {
                                        "description": "tax setting are, no tax, tax exclusive, tax inclusive",
                                        "type": "string",
                                        "example": "no tax"
                                    },
                                    "currency_id": {
                                        "description": "See currencies for available currencies",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "quotation_project_id": {
                                        "description": "Project ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "quotation_title": {
                                        "description": "Title On Quote",
                                        "type": "string",
                                        "example": "Quote For Elon Musk"
                                    },
                                    "quotation_summary": {
                                        "description": "Summary of the quotation",
                                        "type": "string",
                                        "example": "StarLink, Starship, Dragon Capsules"
                                    },
                                    "status": {
                                        "description": "Status for the order, currently supports, DRAFT, FOR_APPROVAL, APPROVED, PAID, VOID, SENT",
                                        "type": "string",
                                        "example": "APPROVED"
                                    },
                                    "exchange_rate": {
                                        "description": "is by default 1, if you set a different other than the default it will divide it by the exchange rate",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "order_lines": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "description": "Contact Person First name",
                                                    "type": "string",
                                                    "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                                },
                                                "description": {
                                                    "description": "Contact Person Last name",
                                                    "type": "string",
                                                    "example": "Illo laboriosam eius sint quae sit iste ut quisquam."
                                                },
                                                "quantity": {
                                                    "description": "Contact Person Email",
                                                    "type": "string",
                                                    "example": "10"
                                                },
                                                "unit_price": {
                                                    "description": "Contact Person is the primary contact person",
                                                    "type": "string",
                                                    "example": "1500"
                                                },
                                                "discount": {
                                                    "description": "Contact Person is included on emails",
                                                    "type": "string",
                                                    "example": "0.10"
                                                },
                                                "tax_rate": {
                                                    "description": "tax_rate",
                                                    "type": "string",
                                                    "example": "0.00"
                                                },
                                                "tax_rate_id": {
                                                    "description": "See tax Rates",
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "chart_of_account_id": {
                                                    "description": "See Chart Of Accounts",
                                                    "type": "string",
                                                    "example": "7"
                                                },
                                                "project_id": {
                                                    "description": "See Projects",
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "expense_id": {
                                                    "description": "See Expenses",
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{order}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "description": "Show an Order",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "description": "Update an order",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_type": {
                                        "description": "Order types are SO, PO, INV, QU, BILL",
                                        "type": "string",
                                        "example": "BILL"
                                    },
                                    "contact_id": {
                                        "description": "see contacts for IDS",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "contact_name": {
                                        "description": "Contact Name is required if contact_id is not provided",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "order_date": {
                                        "description": "Order Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "end_date": {
                                        "description": "end date is not required when is credit note is true",
                                        "type": "string",
                                        "example": "2020-06-09 07:16:26"
                                    },
                                    "reference": {
                                        "description": "Reference is a longText",
                                        "type": "string",
                                        "example": "Suscipit eaque rerum rerum. Perferendis vitae unde et et excepturi."
                                    },
                                    "tax_setting": {
                                        "description": "tax setting are, no tax, tax exclusive, tax inclusive",
                                        "type": "string",
                                        "example": "no tax"
                                    },
                                    "currency_id": {
                                        "description": "See currencies for available currencies",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "quotation_title": {
                                        "description": "Title On Quote",
                                        "type": "string",
                                        "example": "Quote For Elon Musk"
                                    },
                                    "quotation_summary": {
                                        "description": "Summary of the quotation",
                                        "type": "string",
                                        "example": "StarLink, Starship, Dragon Capsules"
                                    },
                                    "status": {
                                        "description": "Status for the order, currently supports, DRAFT, FOR_APPROVAL, APPROVED, PAID, VOID, SENT",
                                        "type": "string",
                                        "example": "APPROVED"
                                    },
                                    "exchange_rate": {
                                        "description": "is by default 1, if you set a different other than the default it will divide it by the exchange rate",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "order_lines": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "description": "Contact Person First name",
                                                    "type": "string",
                                                    "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                                },
                                                "description": {
                                                    "description": "Contact Person Last name",
                                                    "type": "string",
                                                    "example": "Illo laboriosam eius sint quae sit iste ut quisquam."
                                                },
                                                "quantity": {
                                                    "description": "Contact Person Email",
                                                    "type": "string",
                                                    "example": "10"
                                                },
                                                "unit_price": {
                                                    "description": "Contact Person is the primary contact person",
                                                    "type": "string",
                                                    "example": "1500"
                                                },
                                                "discount": {
                                                    "description": "Contact Person is included on emails",
                                                    "type": "string",
                                                    "example": "0.10"
                                                },
                                                "tax_rate": {
                                                    "description": "tax_rate",
                                                    "type": "string",
                                                    "example": "0.00"
                                                },
                                                "tax_rate_id": {
                                                    "description": "See tax Rates",
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "chart_of_account_id": {
                                                    "description": "See Chart Of Accounts",
                                                    "type": "string",
                                                    "example": "7"
                                                },
                                                "delete": {
                                                    "description": "when set to true this will delete the orderline",
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "project_id": {
                                                    "description": "See Projects",
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "expense_id": {
                                                    "description": "See Expenses",
                                                    "type": "string",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "description": "trash an Order",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order-activities": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "description": "Show Order Activities",
                "parameters": [
                    {
                        "name": "contact_id",
                        "in": "query",
                        "description": "return order activity by contact_id",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "description": "Order List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "with will also include relationships",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "orders",
                                    "creditOrder"
                                ]
                            },
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "description": "Multiple Payments on Order",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "paid_at": {
                                        "description": "Payment date",
                                        "type": "string",
                                        "example": "2020-01-01T8:00:00+8"
                                    },
                                    "chart_of_account_id": {
                                        "description": "see chart of accounts for IDS",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "reference": {
                                        "description": "Contact Name is required if contact_id is not provided",
                                        "type": "string",
                                        "example": "Perferendis molestiae."
                                    },
                                    "exchange_rate": {
                                        "description": "Order Date",
                                        "type": "string",
                                        "example": "0.776"
                                    },
                                    "orders": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Order ID",
                                                    "type": "string",
                                                    "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                                },
                                                "amount": {
                                                    "description": "Payment Amount",
                                                    "type": "string",
                                                    "example": "1000.00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payments Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{order}/pay": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "description": "Pay an Order single payment",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "description": "Payment Amount",
                                        "type": "string",
                                        "example": "1000.00"
                                    },
                                    "paid_at": {
                                        "description": "Payment Date",
                                        "type": "string",
                                        "example": "2020-01-01 12:00:00"
                                    },
                                    "chat_of_account_id": {
                                        "description": "Required if not Credit Note, Over Payment, Pre Payment",
                                        "type": "string",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/credit-notes": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "description": "Multiple Payments on Order",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "paid_at": {
                                        "description": "Payment date",
                                        "type": "string",
                                        "example": "2020-01-01T8:00:00+8"
                                    },
                                    "credit_note_id": {
                                        "description": "see chart of accounts for IDS",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "reference": {
                                        "description": "Contact Name is required if contact_id is not provided",
                                        "type": "string",
                                        "example": "Perferendis molestiae."
                                    },
                                    "orders": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "id": {
                                                    "description": "Order ID",
                                                    "type": "string",
                                                    "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                                },
                                                "amount": {
                                                    "description": "Payment Amount",
                                                    "type": "string",
                                                    "example": "1000.00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payments Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{order}/refund": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "description": "Refunds an amount on Order",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "amount": {
                                        "description": "Refund Amount",
                                        "type": "string",
                                        "example": "1000.00"
                                    },
                                    "paid_at": {
                                        "description": "Refund Date",
                                        "type": "string",
                                        "example": "2020-01-01 12:00:00"
                                    },
                                    "chat_of_account_id": {
                                        "description": "Required if not Credit Note, Over Payment, Pre Payment",
                                        "type": "string",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permissions": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "description": "Module Permission List",
                "responses": {
                    "200": {
                        "description": "Permission list"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/modules/{module}/permissions/{action}/toggle": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "description": "Module Permission List",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID of the user granting permission to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "module",
                        "in": "path",
                        "description": "Module of the action where it belongs to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "action",
                        "in": "path",
                        "description": "The action you want to have for a user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission list"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Show a product",
                "parameters": [
                    {
                        "name": "order_type",
                        "in": "query",
                        "description": "order types",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "BILL"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "search term",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product}/transaction-history": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Show a products transaction history",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Product List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "with will also include relationships",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "quantityOnHand",
                                    "purchaseTaxRate",
                                    "saleTaxRate",
                                    "costOfGoodsSoldAccount",
                                    "purchaseAccount",
                                    "saleAccount",
                                    "inventoryAssetAccount"
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "to search a data just send in the key on the parameter then add a value see example",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "like:001"
                        },
                        "example": "primaryPerson.email=like:louie"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "description": "Create a product",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Product Code is a string",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "name": {
                                        "description": "Product Name",
                                        "type": "string",
                                        "example": "Spaceship Apollo"
                                    },
                                    "is_purchased": {
                                        "description": "boolean",
                                        "type": "string",
                                        "format": "boolean",
                                        "example": true
                                    },
                                    "purchase_price": {
                                        "description": "Purchase Price",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": 12.3541
                                    },
                                    "purchase_tax_rate_id": {
                                        "description": "See Tax Rates of list available Tax Rate",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "1"
                                    },
                                    "purchase_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_description": {
                                        "description": "Description is 255 characters long",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "A Super Lightweight aluminum-steel alloy designed to withstand missions in space"
                                    },
                                    "cost_of_goods_sold_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "is_sold": {
                                        "description": "boolean",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": true
                                    },
                                    "sale_price": {
                                        "description": "Sale Price",
                                        "type": "string",
                                        "example": 1000
                                    },
                                    "sale_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "sale_tax_rate_id": {
                                        "description": "See Tax Rates of list available Tax Rate",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "sale_description": {
                                        "description": "Product Description",
                                        "type": "string",
                                        "example": "A Super Lightweight aluminum-steel alloy designed to withstand missions in space"
                                    },
                                    "is_tracked": {
                                        "description": "If this is a product that is tracked",
                                        "type": "string",
                                        "example": true
                                    },
                                    "inventory_asset_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "Vat 12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product_id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "description": "Show a product",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "description": "Update a product",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Product Code is a string",
                                        "type": "string",
                                        "example": "10001"
                                    },
                                    "name": {
                                        "description": "Product Name",
                                        "type": "string",
                                        "example": "Spaceship Apollo"
                                    },
                                    "is_purchased": {
                                        "description": "boolean",
                                        "type": "string",
                                        "format": "boolean",
                                        "example": true
                                    },
                                    "purchase_price": {
                                        "description": "Purchase Price",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": 12.3541
                                    },
                                    "purchase_tax_rate_id": {
                                        "description": "See Tax Rates of list available Tax Rate",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "1"
                                    },
                                    "purchase_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_description": {
                                        "description": "Description is 255 characters long",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "A Super Lightweight aluminum-steel alloy designed to withstand missions in space"
                                    },
                                    "cost_of_goods_sold_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "is_sold": {
                                        "description": "boolean",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": true
                                    },
                                    "sale_price": {
                                        "description": "Sale Price",
                                        "type": "string",
                                        "example": 1000
                                    },
                                    "sale_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "sale_tax_rate_id": {
                                        "description": "See Tax Rates of list available Tax Rate",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "sale_description": {
                                        "description": "Product Description",
                                        "type": "string",
                                        "example": "A Super Lightweight aluminum-steel alloy designed to withstand missions in space"
                                    },
                                    "is_tracked": {
                                        "description": "If this is a product that is tracked",
                                        "type": "string",
                                        "example": true
                                    },
                                    "inventory_asset_account_id": {
                                        "description": "See Chart of Accounts for available Account",
                                        "type": "string",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "description": "trash a product",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/price-settings": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "description": "Get employees cost and sales price under a project",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get employees cost and sales price under a project"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/invoice": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Create Invoice from Project",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rate_type": {
                                        "description": "TASK_RATE,EMPLOYEE_RATE",
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "from_date": {
                                        "description": "2021-01-01",
                                        "type": "string",
                                        "format": "date",
                                        "example": ""
                                    },
                                    "to_date": {
                                        "description": "2021-01-30",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "orderline_option": {
                                        "description": "1,2,3",
                                        "type": "number",
                                        "example": ""
                                    },
                                    "time_entries": {
                                        "type": "array",
                                        "items": {
                                            "description": "ID",
                                            "type": "string",
                                            "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                        }
                                    },
                                    "tasks": {
                                        "type": "array",
                                        "items": {
                                            "description": "ID",
                                            "type": "string",
                                            "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                        }
                                    },
                                    "expenses": {
                                        "type": "array",
                                        "items": {
                                            "description": "ID",
                                            "type": "string",
                                            "example": "b5cafe68-fe81-4770-a783-30b40d5c35a5"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/invoice-fixed-amount": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Invoice Fixed Amount",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "mark_all_as_invoiced": {
                                        "description": "",
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "close_project": {
                                        "description": "",
                                        "type": "boolean",
                                        "example": ""
                                    },
                                    "amount": {
                                        "description": "",
                                        "type": "number",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/quotation-fixed-amount": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Create quotation from a project",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quotation_title": {
                                        "description": "",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/quotations": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "description": "Project Quotations",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": false,
                        "explode": true
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "contact"
                                ]
                            },
                            "default": "contact"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/invoices": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "description": "Project Invoices",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": false,
                        "explode": true
                    },
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "contact"
                                ]
                            },
                            "default": "contact"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "description": "Project List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "contact"
                                ]
                            },
                            "default": "contact"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "description": "Create a Project",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Project Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "contact_id": {
                                        "description": "Contact ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "contact_name": {
                                        "description": "If no contact id, this will be used",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "deadline": {
                                        "description": "Deadline",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "estimate": {
                                        "description": "Must be a decimal",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "status": {
                                        "description": "DRAFT, IN_PROGRESS, CLOSED",
                                        "type": "string",
                                        "example": "DRAFT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}": {
            "put": {
                "tags": [
                    "Projects"
                ],
                "description": "Update a project",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Project Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "contact_id": {
                                        "description": "Contact ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "contact_name": {
                                        "description": "If no contact id, this will be used",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "deadline": {
                                        "description": "Deadline",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "estimate": {
                                        "description": "Must be a decimal",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "status": {
                                        "description": "DRAFT, IN_PROGRESS, CLOSED",
                                        "type": "string",
                                        "example": "DRAFT"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "description": "trash",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/projects/{project}/invoice-initial-data": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "description": "Project Invoice Initial Data",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project ID",
                        "required": false,
                        "explode": true
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "From Date",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "2020-01-01"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "To Date",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "2020-01-20"
                        }
                    },
                    {
                        "name": "is_invoiced",
                        "in": "query",
                        "description": "Is Invoiced",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project Invoice Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Currency List",
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/{setting}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "description": "Show a user",
                "parameters": [
                    {
                        "name": "setting",
                        "in": "path",
                        "description": "Setting ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Setting Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "description": "Update a user",
                "parameters": [
                    {
                        "name": "setting",
                        "in": "path",
                        "description": "Setting ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "currency_id": {
                                        "description": "See system-currencies for list of available currencies",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "PHP"
                                    },
                                    "bill_due": {
                                        "description": "Due",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "bill_due_type": {
                                        "description": "Due Type",
                                        "type": "string",
                                        "example": "of the current month"
                                    },
                                    "invoice_due": {
                                        "description": "Due",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "invoice_due_type": {
                                        "description": "Due Type",
                                        "type": "string",
                                        "example": "of the current month"
                                    },
                                    "quote_due": {
                                        "description": "Due",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "quote_due_type": {
                                        "description": "Due Type",
                                        "type": "string",
                                        "example": "of the current month"
                                    },
                                    "invoice_prefix": {
                                        "description": "Prefix",
                                        "type": "string",
                                        "example": "INV-"
                                    },
                                    "invoice_next_number": {
                                        "description": "next number",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "sales_order_prefix": {
                                        "description": "Prefix",
                                        "type": "string",
                                        "example": "INV-"
                                    },
                                    "sales_order_next_number": {
                                        "description": "next number",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "purchase_order_prefix": {
                                        "description": "Prefix",
                                        "type": "string",
                                        "example": "INV-"
                                    },
                                    "purchase_order_next_number": {
                                        "description": "next number",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "quote_prefix": {
                                        "description": "Prefix",
                                        "type": "string",
                                        "example": "INV-"
                                    },
                                    "quote_next_number": {
                                        "description": "next number",
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "credit_note_prefix": {
                                        "description": "Prefix",
                                        "type": "string",
                                        "example": "CN-"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Setting Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/tax-rates": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of tax-rates",
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/accounts": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of accounts supported by the system",
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/currencies": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of currencies the organization added",
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/available-currencies": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of available currencies supported by the system",
                "responses": {
                    "200": {
                        "description": "Currency Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/currencies-default": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Shows the default currency for this organization",
                "responses": {
                    "200": {
                        "description": "Product Search Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/chart-of-accounts": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of chart of account types supported by the system",
                "responses": {
                    "200": {
                        "description": "Chart of Accounts Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/chart-of-account-types": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of chart of account types supported by the system",
                "responses": {
                    "200": {
                        "description": "Chart of Accounts Type Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/tax-types": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of tax types supported by the system",
                "responses": {
                    "200": {
                        "description": "Tax Types Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/due-date-types": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of due date types supported by the system",
                "responses": {
                    "200": {
                        "description": "Due Date Types Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/contacts": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of contacts",
                "responses": {
                    "200": {
                        "description": "Product Search Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/settings": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show the org settings",
                "responses": {
                    "200": {
                        "description": "Product Search Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/system/projects": {
            "get": {
                "tags": [
                    "System"
                ],
                "description": "Show a list of projects",
                "responses": {
                    "200": {
                        "description": "Project Search Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "description": "List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "project"
                                ]
                            },
                            "default": "project"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "description": "Create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "charge_type": {
                                        "description": "HOURLY_RATE, FIXED_RATE, NON_CHARGEABLE",
                                        "type": "string",
                                        "example": "HOURLY_RATE"
                                    },
                                    "rate": {
                                        "description": "Must be a decimal",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "status": {
                                        "description": "ON_GOING, INVOICED",
                                        "type": "string",
                                        "example": "ON_GOING"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/{task}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "description": "Update",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "name": {
                                        "description": "Name",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "charge_type": {
                                        "description": "HOURLY_RATE, FIXED_RATE, NON_CHARGEABLE",
                                        "type": "string",
                                        "example": "HOURLY_RATE"
                                    },
                                    "rate": {
                                        "description": "Must be a decimal",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "status": {
                                        "description": "ON_GOING, INVOICED",
                                        "type": "string",
                                        "example": "ON_GOING"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "description": "trash",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tax-rates": {
            "get": {
                "tags": [
                    "Tax Rates"
                ],
                "description": "Tax Rate List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "find name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "with will also include relationships",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "saleTaxRates",
                                    "purchaseTaxRates",
                                    "productSales",
                                    "productPurchases",
                                    "orderLines",
                                    "chartOfAccounts"
                                ]
                            },
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax Rate Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tax Rates"
                ],
                "description": "Create a tax rate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rate": {
                                        "description": "Must be a whole number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "name": {
                                        "description": "Tax Rate Name",
                                        "type": "string",
                                        "example": "Vat 12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax Rate Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tax-rates/{rate}": {
            "get": {
                "tags": [
                    "Tax Rates"
                ],
                "description": "Show a user",
                "parameters": [
                    {
                        "name": "rate",
                        "in": "path",
                        "description": "Tax Rate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax Rate Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tax Rates"
                ],
                "description": "Update a user",
                "parameters": [
                    {
                        "name": "rate",
                        "in": "path",
                        "description": "Tax Rate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Tax rate name",
                                        "type": "string",
                                        "example": "Vat 30"
                                    },
                                    "rate": {
                                        "description": "Tax Rate",
                                        "type": "string",
                                        "example": "30"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax Rate Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tax Rates"
                ],
                "description": "trash a tax rate",
                "parameters": [
                    {
                        "name": "rate",
                        "in": "path",
                        "description": "Tax Rate ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax Rate Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/time-entries": {
            "get": {
                "tags": [
                    "Time Entries"
                ],
                "description": "List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "task"
                                ]
                            },
                            "default": "task"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key or relationship.key ex. sortKey=taxRate.name",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "type"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Time Entries"
                ],
                "description": "Create",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "user_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "type": {
                                        "description": "DURATION, START_END",
                                        "type": "string",
                                        "example": "DURATION"
                                    },
                                    "start_at": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "end_at": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "time_entry_date": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "duration": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "is_invoiced": {
                                        "description": "",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/time-entries/{time_entry}": {
            "put": {
                "tags": [
                    "Time Entries"
                ],
                "description": "Update",
                "parameters": [
                    {
                        "name": "time_entry",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "task_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "user_id": {
                                        "description": "ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string",
                                        "example": "Manila Styles"
                                    },
                                    "type": {
                                        "description": "DURATION, START_END",
                                        "type": "string",
                                        "example": "DURATION"
                                    },
                                    "start_at": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "end_at": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "time_entry_date": {
                                        "description": "Date",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    },
                                    "duration": {
                                        "description": "Must be a number",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "is_invoiced": {
                                        "description": "",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Time Entries"
                ],
                "description": "trash",
                "parameters": [
                    {
                        "name": "time_entry",
                        "in": "path",
                        "description": "ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transfer-monies": {
            "get": {
                "tags": [
                    "Transfer Money"
                ],
                "description": "Order List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Transfer Money"
                ],
                "description": "Create a Transfer Money",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "from_bank_account_id": {
                                        "description": "Must be of type Bank see chart of accounts",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "to_bank_account_id": {
                                        "description": "Must be of type Bank see chart of accounts",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "from_amount": {
                                        "description": "Must be of type Bank see chart of accounts",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "to_amount": {
                                        "description": "To Amount",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "reference": {
                                        "description": "Reference is a longText",
                                        "type": "string",
                                        "example": "2020-06-09 07:16:26"
                                    },
                                    "order_date": {
                                        "description": "end date is not required when is credit note is true",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transfer Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transfer-monies/{transfer}": {
            "get": {
                "tags": [
                    "Transfer Money"
                ],
                "description": "Show an Transfer",
                "parameters": [
                    {
                        "name": "transfer",
                        "in": "path",
                        "description": " ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transfer Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transfer-monies/{order}": {
            "put": {
                "tags": [
                    "Transfer Money"
                ],
                "description": "Update an order",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "from_bank_account_id": {
                                        "description": "Must be of type Bank see chart of accounts",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "to_bank_account_id": {
                                        "description": "Must be of type Bank see chart of accounts",
                                        "type": "string",
                                        "example": "90b90e14-d344-4fbd-932b-8ef18fb1fb54"
                                    },
                                    "from_amount": {
                                        "description": "Must be of type Bank see chart of accounts",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "to_amount": {
                                        "description": "To Amount",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "reference": {
                                        "description": "Reference is a longText",
                                        "type": "string",
                                        "example": "2020-06-09 07:16:26"
                                    },
                                    "order_date": {
                                        "description": "end date is not required when is credit note is true",
                                        "type": "string",
                                        "example": "2020-06-02 07:16:26"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/invite": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Invite a user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First Name",
                                        "type": "string",
                                        "example": "Jarrett"
                                    },
                                    "last_name": {
                                        "description": "Last Name",
                                        "type": "string",
                                        "example": "O'Neal IV"
                                    },
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "jarret_oneal4@mailgun.io"
                                    },
                                    "password": {
                                        "description": "User Password",
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Invite"
                    }
                }
            }
        },
        "/api/users/{user}/project-price": {
            "put": {
                "tags": [
                    "User"
                ],
                "description": "User project price",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "project_id": {
                                        "description": "Project ID",
                                        "type": "string",
                                        "example": ""
                                    },
                                    "sales_price": {
                                        "description": "Must be a decimal",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    },
                                    "purchase_price": {
                                        "description": "Must be a decimal",
                                        "type": "string",
                                        "format": "decimal",
                                        "example": "12"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Project price Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "User List",
                "parameters": [
                    {
                        "name": "all",
                        "in": "query",
                        "description": "If all is enabled it will try to retrieve all data, and may cause the request to crash",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    true,
                                    false
                                ]
                            },
                            "default": "false"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limits the data being returned",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "25"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "skips a few data before getting the data, basically if you offset 3, it will start to get the 4th data from the db result",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "0"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "calls a relationship of the model ex. ?with=avatar,attachments",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "avatar,attachments"
                        }
                    },
                    {
                        "name": "sortKey",
                        "in": "query",
                        "description": "sorts data based on a key",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "code"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "sorts a key descending and ascending",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "asc",
                                    "desc"
                                ]
                            },
                            "default": "false"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Create a user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "tomas@test.com"
                                    },
                                    "first_name": {
                                        "description": "User First Name",
                                        "type": "string",
                                        "example": "Levi"
                                    },
                                    "last_name": {
                                        "description": "User Last Name",
                                        "type": "string",
                                        "example": "Levi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Show a user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Update a user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "Email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "tomas@test.com"
                                    },
                                    "first_name": {
                                        "description": "User First Name",
                                        "type": "string",
                                        "example": "Levi"
                                    },
                                    "last_name": {
                                        "description": "User Last Name",
                                        "type": "string",
                                        "example": "Levi"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "trash a user",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/avatar": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Upload a User Avatar",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "Avatar to use",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/permissions": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Show a users permissions",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Data"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication for Dobby"
        },
        {
            "name": "Bank Accounts",
            "description": "Bank Accounts for Dobby"
        },
        {
            "name": "Chart of Accounts",
            "description": "Chart of Accounts for Dobby"
        },
        {
            "name": "Chart of Account Types",
            "description": "Chart of Account Types for Dobby"
        },
        {
            "name": "Customers and Suppliers",
            "description": "Contact for Dobby"
        },
        {
            "name": "Currencies",
            "description": "Currencies for Dobby"
        },
        {
            "name": "Expenses",
            "description": "Expense for Dobby"
        },
        {
            "name": "IMEX",
            "description": "Import Export for Dobby"
        },
        {
            "name": "Orders",
            "description": "Orders for Dobby"
        },
        {
            "name": "Payments",
            "description": "Payments for Dobby"
        },
        {
            "name": "Permission",
            "description": "Permission for Dobby"
        },
        {
            "name": "Products",
            "description": "Products for Dobby"
        },
        {
            "name": "Projects",
            "description": "Projects for Dobby"
        },
        {
            "name": "Settings",
            "description": "Settings for Dobby"
        },
        {
            "name": "System",
            "description": "The apis listed below doesn't have permissions, so they are the best way to use if you have dropdowns etc.."
        },
        {
            "name": "Tasks",
            "description": "Tasks for Dobby"
        },
        {
            "name": "Tax Rates",
            "description": "Tax Rates for Dobby"
        },
        {
            "name": "Time Entries",
            "description": "Time Entries for Dobby"
        },
        {
            "name": "Transfer Money",
            "description": "Transfer Monies for Dobby"
        },
        {
            "name": "User",
            "description": "User for Dobby"
        }
    ]
}